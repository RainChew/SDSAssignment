df
df <- ts(df, frequency = 1, start =c(1960,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,5]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
# df <- read.csv("External_Trade_Monthly_a.csv")
df <- read.csv("India_GDP_1960-2022.csv")
print(df)
# df$Gross_Exports <- as.numeric(gsub(",", "", df$Gross_Exports))
# df$Gross_Imports <- as.numeric(gsub(",", "", df$Gross_Imports))
# df$Total_Trade <- as.numeric(gsub(",", "", df$Total_Trade))
# df$Trade_Balance <- as.numeric(gsub(",", "", df$Trade_Balance))
df
df <- ts(df, frequency = 1, start =c(1960,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,3]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
library(forecast)
library(ggplot2)
# df <- read.csv("External_Trade_Monthly_a.csv")
df <- read.csv("India_GDP_1960-2022.csv")
print(df)
# df$Gross_Exports <- as.numeric(gsub(",", "", df$Gross_Exports))
# df$Gross_Imports <- as.numeric(gsub(",", "", df$Gross_Imports))
# df$Total_Trade <- as.numeric(gsub(",", "", df$Total_Trade))
# df$Trade_Balance <- as.numeric(gsub(",", "", df$Trade_Balance))
df
df <- ts(df, frequency = 1, start =c(1960,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,4]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
# df <- read.csv("External_Trade_Monthly_a.csv")
df <- read.csv("India_GDP_1960-2022.csv")
print(df)
# df$Gross_Exports <- as.numeric(gsub(",", "", df$Gross_Exports))
# df$Gross_Imports <- as.numeric(gsub(",", "", df$Gross_Imports))
# df$Total_Trade <- as.numeric(gsub(",", "", df$Total_Trade))
# df$Trade_Balance <- as.numeric(gsub(",", "", df$Trade_Balance))
df
df <- ts(df, frequency = 1, end =c(2021,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,3]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,3]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
#Drop Variab1le
df2 <- df[,2]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
#Drop Variab1le
df2 <- df[,4]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
# df <- read.csv("External_Trade_Monthly_a.csv")
df <- read.csv("India_GDP_1960-2022.csv")
print(df)
# df$Gross_Exports <- as.numeric(gsub(",", "", df$Gross_Exports))
# df$Gross_Imports <- as.numeric(gsub(",", "", df$Gross_Imports))
# df$Total_Trade <- as.numeric(gsub(",", "", df$Total_Trade))
# df$Trade_Balance <- as.numeric(gsub(",", "", df$Trade_Balance))
df
df <- ts(df, frequency = 1, end =c(2021,1))
library(forecast)
library(ggplot2)
# df <- read.csv("External_Trade_Monthly_a.csv")
df <- read.csv("India_GDP_1960-2022.csv")
print(df)
# df$Gross_Exports <- as.numeric(gsub(",", "", df$Gross_Exports))
# df$Gross_Imports <- as.numeric(gsub(",", "", df$Gross_Imports))
# df$Total_Trade <- as.numeric(gsub(",", "", df$Total_Trade))
# df$Trade_Balance <- as.numeric(gsub(",", "", df$Trade_Balance))
df
df <- ts(df, frequency = 1, end =c(2021,1))
df <- log(df)
plot.ts(df)
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
print(df)
df <- ts(df, frequency = 12, start =c(1993,1))
# df <- log(df)
plot.ts(df)
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
print(df)
df <- ts(df, frequency = 1, start =c(1993,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,2]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
print(df)
df <- ts(df, frequency = 1, start =c(1993,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,2]
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
print(df)
df <- ts(df, frequency = 1, end =c(2021,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,2]
plot.ts(df2)
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
print(df)
df <- ts(df, frequency = 1, end =c(2021,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,3]
plot.ts(df2)
library(readr)
India_GDP_1960_2022 <- read_csv("India_GDP_1960-2022.csv")
View(India_GDP_1960_2022)
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
df$India.GDP...Historical.Data.1 <- format(df$Score, nsmall = 2)
print(df)
df <- ts(df, frequency = 1, end =c(2021,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,3]
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
df$India.GDP...Historical.Data.1 <- format(df$India.GDP...Historical.Data.1, nsmall = 2)
print(df)
df <- ts(df, frequency = 1, end =c(2021,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,3]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
df$India.GDP...Historical.Data.1 <- format(df$India.GDP...Historical.Data.1, nsmall = 2)
print(df)
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
df$India.GDP...Historical.Data.1 <- format(df$India.GDP...Historical.Data.1, nsmall = 2)
df <- df[order(-df$India.GDP...Historical.Data.1), ]
print(df)
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
df$India.GDP...Historical.Data.1 <- format(df$India.GDP...Historical.Data.1, nsmall = 2)
df <- df[order(-df$X), ]
print(df)
df <- ts(df, frequency = 1, end =c(2021,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,3]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
# Load required libraries
library(forecast)
library(ggplot2)
# Read the CSV file
df <- read.csv("India_GDP_1960-2022.csv")
# Sort the data frame by the correct column. I'm assuming you want to sort by the year (X column).
df <- df[order(df$X), ]
# Create a time series object from the data frame. It's better to specify 'start' instead of 'end' for the 'ts' function.
df_ts <- ts(df$India.GDP...Historical.Data.1, frequency = 1, start = c(1960, 1))
# Plot the time series data
plot(df_ts)
# Now, you're trying to drop a variable, but df2 should be a data frame or time series object.
# Assuming you want to extract the GDP column:
df2 <- df_ts
# Fit an ARIMA model to the time series data
fit <- auto.arima(df2)
summary(fit)
# Perform model selection using AIC and display the trace
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
df <- df[ -c(1) ] #delete the first column
names(df) <- lapply(df[1, ], as.character) # deal the wrong column names
df <- df[-1,] #delete the first row
df$`GDP in (Billion) $` <- as.numeric(df$`GDP in (Billion) $`) #chr into num
df$`Per Capita in rupees` <- as.numeric(df$`Per Capita in rupees`) #chr into num
df$`Growth %` <- as.numeric(df$`Growth %`) #chr into num
df$Year <- as.numeric(df$Year) #chr into num
df <- df %>%
arrange(Year) #arrange the data ascending by year
sum(is.na(df)) #checking the nadf <- df[order(-df$X), ]
print(df)
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
df <- df[ -c(1) ] #delete the first column
names(df) <- lapply(df[1, ], as.character) # deal the wrong column names
df <- df[-1,] #delete the first row
df$`GDP in (Billion) $` <- as.numeric(df$`GDP in (Billion) $`) #chr into num
df$`Per Capita in rupees` <- as.numeric(df$`Per Capita in rupees`) #chr into num
df$`Growth %` <- as.numeric(df$`Growth %`) #chr into num
df$Year <- as.numeric(df$Year) #chr into num
df <- df %>%
arrange(df$Year) #arrange the data ascending by year
sum(is.na(df)) #checking the nadf <- df[order(-df$X), ]
print(df)
df <- ts(df, frequency = 1, end =c(2021,1))
library(forecast)
library(ggplot2)
df <- read.csv("India_GDP_1960-2022.csv")
df <- df[ -c(1) ] #delete the first column
names(df) <- lapply(df[1, ], as.character) # deal the wrong column names
df <- df[-1,] #delete the first row
df$`GDP in (Billion) $` <- as.numeric(df$`GDP in (Billion) $`) #chr into num
df$`Per Capita in rupees` <- as.numeric(df$`Per Capita in rupees`) #chr into num
df$`Growth %` <- as.numeric(df$`Growth %`) #chr into num
df$Year <- as.numeric(df$Year) #chr into num
df <- df %>%
arrange(df$Year) #arrange the data ascending by year
sum(is.na(df)) #checking the nadf <- df[order(-df$X), ]
print(df)
df <- ts(df, frequency = 1, end =c(2021,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,3]
#Drop Variab1le
df2 <- df[,2]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("Chinas GDP in Province En.csv")
print(df)
library(forecast)
library(ggplot2)
df <- read.csv("monthly.csv")
library(forecast)
library(ggplot2)
df <- read.csv("monthly_csv.csv")
print(df)
library(forecast)
library(ggplot2)
df <- read.csv("monthly_csv.csv")
print(df)
df <- ts(df, frequency = 1, start =c(1997,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,2]
library(forecast)
library(ggplot2)
df <- read.csv("monthly_csv.csv")
print(df)
df <- ts(df, frequency = 1, start =c(1997,1))
df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,2]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("monthly_csv.csv")
print(df)
df <- ts(df, frequency = 1, start =c(1997,1))
# df <- log(df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,2]
plot.ts(df2)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("daily_csv.csv")
print(df)
df_daily <- ts(df, frequency = 365, start = c(1997, 7))
# df <- log(df)
plot.ts(df)
library(forecast)
library(ggplot2)
df <- read.csv("daily_csv.csv")
print(df)
df_daily <- ts(df, frequency = 365, start = c(1997, 7))
# df <- log(df)
any(is.infinite(df))
# df <- log(df)
any(is.infinite(df))
plot(df)
# df <- log(df)
subset_df <- df[start_year:end_year,]  # Replace start_year and end_year
plot(subset_df)plot.ts(df)
library(forecast)
library(ggplot2)
df <- read.csv("daily_csv.csv")
print(df)
df_daily <- ts(df, frequency = 365, start = c(1997, 7))
library(forecast)
library(ggplot2)
df <- read.csv("daily_csv.csv")
print(df)
df_daily <- ts(df, frequency = 365, start = c(1997, 7))
# df <- log(df)
subset_df <- df[2002:2009,]  # Replace start_year and end_year
plot(subset_df)plot.ts(df)
#Drop Variab1le
df2 <- df[,2]
library(forecast)
library(ggplot2)
df <- read.csv("daily_csv.csv")
print(df)
df_daily <- ts(df, frequency = 365, start = c(1997, 7))
# df <- log(df)
subset_df <- df[2002:2009,]  # Replace start_year and end_year
plot(subset_df)
library(forecast)
library(ggplot2)
df <- read.csv("daily_csv.csv")
print(df)
df_daily <- ts(df, frequency = 365, start = c(1997, 7))
# df <- log(df)
# Subset your data for the desired time period
subset_df <- window(df, start = c(2006, 1), end = c(2009, 12))
# df <- log(df)
# Subset your data for the desired time period
subset_df <- window(df, start = c(2006, 1), end = c(2009, 12))
# Set the y-axis limits manually based on your data
# Replace min_value and max_value with appropriate values
min_value <- min(subset_df, na.rm = TRUE)
max_value <- max(subset_df, na.rm = TRUE)
# Plot the subsetted data with specified y-axis limits
plot(subset_df, ylim = c(min_value, max_value))plot(subset_df)
plot.ts(df)
#Drop Variab1le
df2 <- df[,2]
library(forecast)
library(ggplot2)
df <- read.csv("daily_csv.csv")
head(df)
range(df$Date)
library(forecast)
library(ggplot2)
df <- read.csv("daily-minimum-temperatures-in-me.csv")
head(df)
range(df$Date)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("HH Spot Price.csv")
head(df)
range(df$Date)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
head(df)
library(forecast)
library(ggplot2)
df <- read.csv("HH Spot Price.csv")
selected_columns <- df[, c(, 2)]
head(df)
library(forecast)
library(ggplot2)
df <- read.csv("HH Spot Price.csv")
df <- df[, c( 2)]
head(df)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("a.csv")
library(forecast)
library(ggplot2)
df <- read.csv("a.csv")
library(forecast)
library(ggplot2)
df <- read.csv("abc.csv")
library(forecast)
library(ggplot2)
df <- read.csv("monthly_temperature_aomori_city.csv")
df <- df[, c( 2)]
head(df)
library(forecast)
fit <- auto.arima(df2)
summary(fit)
auto.arima(df2, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("monthly_temperature_aomori_city.csv")
df <- df[, c( 2)]
head(df)
library(forecast)
fit <- auto.arima(df)
summary(fit)
auto.arima(df, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("monthly_temperature_aomori_city.csv")
df <- df[, c( 2)]
head(df)
library(forecast)
fit <- auto.arima(df)
summary(fit)
auto.arima(df, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("monthly_temperature_aomori_city.csv")
df <- df[, c( 3)]
head(df)
library(forecast)
fit <- auto.arima(df)
summary(fit)
auto.arima(df, ic="aic", trace=TRUE)
library(forecast)
library(ggplot2)
df <- read.csv("monthly_temperature_aomori_city.csv")
df
library(forecast)
library(ggplot2)
df <- read.csv("monthly_temperature_aomori_city.csv")
df
df <- df[, c( 4)]
library(forecast)
library(ggplot2)
df <- read.csv("monthly_temperature_aomori_city.csv")
df
df <- df[, c( 3)]
head(df)
library(forecast)
fit <- auto.arima(df)
summary(fit)
auto.arima(df, ic="aic", trace=TRUE)
